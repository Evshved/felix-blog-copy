---
layout: post
title: "Junior vs Senior"
date: 2017-06-23 11:48:38 +0300
categories: talk
---
Вернусь к старой теме после новой дискуссии.

Мне всё так же кажется очевидным, что разница между junior’ом и senior’ом заключается в знаниях и опыте, без которых (и без постоянного осмысления которых) эволюция разработчика невозможна, но попробую их в некоторой мере выключить. Пойдём делить через «методы решения задач».

Если кому лень читать простыню, вот краткое: junior сначала делает, потом думает, senior сначала думает, потом делает. Всё, уходите.

---

Поехали привычным списочком.

**Во-первых**, senior не совершает действия, причин и последствий которых не осознаёт. Как минимум, до выполнения *rm -rf* он сначала выполнит *man rm*. Это достаточно сложное действие для того, чтобы десятки тысяч кандидатов на гордое звание *яжыпраграмизта* отсеивались путём отстреливания всякого полезного в продакшене. Соответственно, junior мануалы читать не склонен.

**Во-вторых**, senior постоянно перепроверяет себя. А правильно ли я помню действие *rm -rf*? А в этой OS? А в этой версии? А в 2017 году? Чем больше опыта ситуаций, в которых излишнее самодовольство в паре с уверенной самоуверенностью приводили к серии бабахов и горящих седалищ, тем больше желания убедиться в правоте ещё раз. И ещё. И ещё разочек. Соответственно, junior к проверкам не склонен.

**В-третьих**, senior сознательно развивается в профессии. При этом не по нужде (*«ой, а чё, мы уже год MongoDB используем? ну, наверное, пора почитать tutorial… я же типа этот… синёр… завтра точно почитаю»*), но по другой причине. Даже затрудняюсь сформулировать. По той же причине, по которой стал программистом. Из любопытства. Из чувства перспективы и актуальности. Ради эрудиции. Ради изучения чужого опыта. Чтобы быть профессионалом. Соответственно, junior развивается в режиме *«куда пнули, туда и лечу, а если не пнули, не лечу»*.

**В-четвёртых**, senior решает не только текущую задачу. Более того, он зачастую эту текущую задачу изменяет (что тоже отдельное желание и умение) с учётом перспективы. Там, где junior посадит в понедельник чахлое яблоньку, senior озаботится прогнозом погоды (во вторник мороз), экономическими сводками (в среду Аргентина удавит рынок мегатоннами дешёвых яблок), вспомнит о планах концерна Химовнопром залить площадку хлором (четверг), ну и вообще задумается о том, какая задача решается и не лучше ли вагон дров в Мурманск отправить, взамен у той же Аргентины купить яблоки. // что любопытно, привычки типичных junior’ов заставляют их уже во вторник говорить буквально следующее: *была поставлена задача посадить яблоню, я посадил, какие ко мне претензии?!* и всё с такими искренними эмоциями… никаких, конечно, кроме того, что яблонька сдохла и жрать нам нечего.

**В-пятых**, senior — это система. Системные решения. Системные знания. А следует из Бэ. Бэ на фундаменте академика Петрова и профессора Сидорова. Интеграция с решениями MBI. Автоматизация. Основание. Аргументация. Ледокол идёт по курсу и каждая заклёпка не просто так. Соответственно, junior — это адепт хаоса. Состоит из отрывочных знаний, сведений, мнений бабушек и однажды прочитанного на Хабре.

**В-шестых**, senior инициативно желает сделать лучше и делает лучше. Вместо *«ну вот, я же говорил Пете, что надо тут false превратить в true, чтобы у нас всё вдвое быстрее заработало»* он превращает *false* в *true*, делает замеры и всё работает вдвое быстрее. Соответственно, junior сидит на попе ровно. Поступит приказ улучшить? Ну, чёт улучшим. Нет? Продолжаем сидеть.

---

Вот как-то такой ещё можно использовать угол для оценки происходящего вокруг вас.
