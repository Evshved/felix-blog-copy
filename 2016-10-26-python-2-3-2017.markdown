---
layout: post
title: "Python 2, 3, 2017"
date: 2016-10-26 11:31:56 +0300
categories: talk
---
Противостояние Python 3 и Python 2 крепко вошло в историю индустрии. Первый релиз третьей ветки вышел в 2008 году. Кособокий, медленный, очень стрёмный, но вышел. К концу 2016 года мир Python всё ещё остаётся миром версии 2.7. При том, что 3.5 уже очень даже ничего. Почему?

Потому, что разработчик человек. А человек — он существо ленивое и не любящее смотреть далеко. Чем меньше движений, тем лучше.

Программистов опытом 10+ лет надо ежегодно проверять на толщину слоя мха и синдром вахтёра. Эти ребята слишком много раз переписывали, мигрировали, граблировали, не спали сутками и т.п. Потому всякая новая несовместимая версия чего-нибудь их подбешивает. Им лень и всегда некогда переписывать миллион строк работающего кода. Им страшно трогать сервисы за некоторые места (у которых список авторов напоминает начало Евангелия от Матфея — страница породивших). Они знают, что любая новая версия всего включает в себя новые баги.

Потому НЕТ. Мы не будем. Нам и так хорошо.

---

Ладно. Пусть с тем, что Python 2.7 является ржавой баржей, которая хоть и ржавая, но построена на века (ок, приукрасил), языка с интерпретатором хватает на 99% того, что делается и будет делаться. Фигня в том, что на носу 2017 год. Мы живём в эпоху скоростей.

Обратите внимание на то, с какой частотой сейчас выходят major’ы даже не фреймворков, но языков. C++ получил первый стандарт в 1998 году (через 8 лет после «стандарта» по мануалу), а потом C++11, C++14 и C++17. Java после выхода SE 6 в 2006 году потупила пять лет, потом ускорилась — 2011 (SE 7) и 2014 (SE 8). В 2017 обещают SE 9. Swift впереди планеты всей — ломят с частотой релиза в год, при этом вовсю ломают совместимость. Go и Rust хоть уже в production’е, но до сих пор в реальном статусе развивающейся разработки.

Операционные системы туда же. Чётные Ubuntu раз в два года. Mac OS чуть ли не раз в год. Windows раз в два-три года. Android раз в год.

Чувствуете плотность?

---

У разработчика уже нет пяти лет на размышления. Даже трёх лет нет. Если перестаёшь обновляться, превращаешься в Рипа ван Винкля, но тот ляпнулся на 20 лет, а разработчику и пары хватит. Если не пишешь автономную систему в вакууме, через два года меняется вся экосистема. Библиотеки, фреймворки, API, железо, операционные системы, базы. В какой-то обязательно наступающий (если ваша штуковина не в космосе) момент оказывается, что надо переписывать половину сервиса. И в стопицотый раз подчеркну — этот момент будет наступать теперь всё раньше.

На рынке больше игроков. В мире больше разработчиков. Конкуренция жёстче. Всё это меняет правила игры. В те котлы, в которых уже варятся фронтендеры, постепенно закидывают бекендеров. И всё кажется, что можно потянуть, можно обновиться однажды, не сейчас. Есть более приоритетные задачи. А котёл всё теплее. Просто не до каждой головы с нужной скоростью доходят ощущения от тлеющей жопы.

---

Конечно, всегда будет огороженный полуостров с ребятами, у которых собственный космос. Все эти стойки со старыми (но стабильными!) OS, на которых старые (но стабильные!) интерпретаторы / компиляторы для старых (но стабильных!) сервисов. Фигня в том, что забор у такого полуострова будет расти с большей скоростью. И разработчики вместо разработки будут заняты невероятно интересными занятиями: костылизация, [манкипатчинг](https://en.wikipedia.org/wiki/Monkey_patch), [безуспешная] делегасизация, попытки прикрутить хоть какие винтики новых стеков к старому (но стабильному!) сараю. Удачи на рынке труда таким заповедникам.

Короче, если ты плюнешь в прогресс, он утрётся, но если прогресс плюнет в тебя, ты утонешь.
